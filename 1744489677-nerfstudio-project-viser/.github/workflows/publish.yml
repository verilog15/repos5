# This workflows will upload a Python Package using Poetry when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

name: Upload Python Package

on:
  release:
    types: [created]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.8"
      - name: Install dependencies and build client
        run: |
          pip install uv
          uv pip install --system -e ".[dev]"
          uv pip install --system build twine
          # Build client files.
          python -c "import viser; viser.ViserServer()"
      - name: Strip unsupported tags in README
        run: |
          sed -i '/<!-- pypi-strip -->/,/<!-- \/pypi-strip -->/d' README.md
      - name: Only bundle client build for PyPI release
        run: |
          # This should delete everything in src/viser/client except for the
          # build folder + original source files. We don't want to package
          # .nodeenv, node_modules, etc in the release.
          mv src/viser/client/build ./__built_client
          rm -rf src/viser/client/*
          git checkout src/viser/client
          mv ./__built_client src/viser/client/build
      - name: Build and publish
        env:
          PYPI_USERNAME: ${{ secrets.PYPI_USERNAME }}
          PYPI_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          python -m build
          twine upload --username $PYPI_USERNAME --password $PYPI_PASSWORD dist/*
